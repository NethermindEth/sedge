"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2225],{7783:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(4848),s=t(8453);const r={sidebar_position:1,id:"mainnet"},o="Mainnet",a={id:"networks/mainnet",title:"Mainnet",description:"Mainnet is the public and decentralized network of Ethereum. It is the network that all validators participate in to",source:"@site/docs/networks/mainnet.mdx",sourceDirName:"networks",slug:"/networks/mainnet",permalink:"/docs/networks/mainnet",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/networks/mainnet.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"mainnet"},sidebar:"tutorialSidebar",previous:{title:"Networks and Clients",permalink:"/docs/networks"},next:{title:"Hoodi",permalink:"/docs/networks/hoodi"}},l={},d=[{value:"Supported Execution Clients",id:"supported-execution-clients",level:2},{value:"Supported Consensus Clients",id:"supported-consensus-clients",level:2},{value:"Supported Validator Clients",id:"supported-validator-clients",level:2},{value:"MEV-Boost",id:"mev-boost",level:2},{value:"Generating a Full Node",id:"generating-a-full-node",level:2},{value:"Generating a Full Node with a Validator",id:"generating-a-full-node-with-a-validator",level:2},{value:"Create keystore for validator",id:"create-keystore-for-validator",level:2},{value:"Running your setup",id:"running-your-setup",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mainnet",children:"Mainnet"})}),"\n",(0,i.jsx)(n.p,{children:"Mainnet is the public and decentralized network of Ethereum. It is the network that all validators participate in to\nearn staking rewards, and it is the network that all users interact with to send transactions and store state. Mainnet is\nsecured by the Proof-of-Stake (PoS) algorithm."}),"\n",(0,i.jsx)(n.h2,{id:"supported-execution-clients",children:"Supported Execution Clients"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.nethermind.io/",children:"Nethermind"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://geth.ethereum.org/docs/",children:"Geth"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/ledgerwatch/erigon",children:"Erigon"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://besu.hyperledger.org/en/stable/",children:"Besu"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"supported-consensus-clients",children:"Supported Consensus Clients"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://lighthouse-book.sigmaprime.io/",children:"Lighthouse"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://chainsafe.github.io/lodestar/",children:"Lodestar"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.prylabs.network/docs/getting-started/",children:"Prysm"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/",children:"Teku"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nimbus.guide/",children:"Nimbus"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"supported-validator-clients",children:"Supported Validator Clients"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://lighthouse-book.sigmaprime.io/",children:"Lighthouse"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://chainsafe.github.io/lodestar/",children:"Lodestar"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.prylabs.network/docs/getting-started/",children:"Prysm"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/",children:"Teku"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nimbus.guide/",children:"Nimbus"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"mev-boost",children:"MEV-Boost"}),"\n",(0,i.jsxs)(n.p,{children:["We support ",(0,i.jsx)(n.a,{href:"https://github.com/flashbots/mev-boost",children:"mev-boost"})," on mainnet by default, in case you want to remove it from your setup,\nrun ",(0,i.jsx)(n.code,{children:"sedge generate full-node"})," using the ",(0,i.jsx)(n.code,{children:"--no-mev-boost"})," flag, for example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sedge generate full-node --no-mev-boost=true\n"})}),"\n",(0,i.jsx)(n.h2,{id:"generating-a-full-node",children:"Generating a Full Node"}),"\n",(0,i.jsxs)(n.p,{children:["To generate a setup of a full node (without a validator node) with random clients, you only need to add the ",(0,i.jsx)(n.code,{children:"--no-validator"})," to ",(0,i.jsx)(n.code,{children:"sedge generate full-node"}),". For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sedge generate full-node --no-validator\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Sedge uses Mainnet as default network, therefore is not necessary to specify the target network."})}),"\n",(0,i.jsx)(n.h2,{id:"generating-a-full-node-with-a-validator",children:"Generating a Full Node with a Validator"}),"\n",(0,i.jsxs)(n.p,{children:["For running a validator with random clients, you need to omit the ",(0,i.jsx)(n.code,{children:"--no-validator"})," flag. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sedge generate full-node\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-keystore-for-validator",children:"Create keystore for validator"}),"\n",(0,i.jsx)(n.p,{children:"To create a keystore for a validator, you need to run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sedge keys\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-your-setup",children:"Running your setup"}),"\n",(0,i.jsx)(n.p,{children:"Once you have generated your setup, you can run it with the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sedge run\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);