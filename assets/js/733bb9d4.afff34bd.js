"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2769],{7422:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>h});var i=n(4848),s=n(8453);const a={sidebar_position:11,id:"slashing-export"},o="Slashing Export",r={id:"commands/slashing-export",title:"Slashing Export",description:"Running sedge slashing-export will export slashing protection data from the current validator client. The slashing protection data is a JSON file that meets with the EIP-3076 specification.",source:"@site/docs/commands/slashingExport.mdx",sourceDirName:"commands",slug:"/commands/slashing-export",permalink:"/docs/commands/slashing-export",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/slashingExport.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,id:"slashing-export"},sidebar:"tutorialSidebar",previous:{title:"Run",permalink:"/docs/commands/run"},next:{title:"Slashing Import",permalink:"/docs/commands/slashing-import"}},l={},h=[{value:"Help",id:"help",level:2},{value:"Execution Example",id:"execution-example",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"slashing-export",children:"Slashing Export"})}),"\n",(0,i.jsxs)(t.p,{children:["Running ",(0,i.jsx)(t.code,{children:"sedge slashing-export"})," will export slashing protection data from the current validator client. The slashing protection data is a JSON file that meets with the ",(0,i.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-3076",children:"EIP-3076"})," specification."]}),"\n",(0,i.jsx)(t.h2,{id:"help",children:"Help"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:'$ sedge slashing-export --help\nExport Slashing Protection Interchange Format (EIP-3076) data. This command assumes\nthat the validator client container exists, stopped or not and that its database\nis already initialized. Take in mind that the validator client generates slashing\nprotection data after some time running, so for some clients export slashing protection\ndata just after start the client could produce some errors.\n\nThis command stops the validator client during the exporting process due to the\nvalidator database being locked while it\'s running but leaves the validator client\nin the same state in which it was found. That means if the validator is running/stopped\nbefore the export, then the validator will be running/stopped after the command\nis executed, regardless of whether the export fails or not. To force a different\nbehavior use --start-validator and --stop-validator flags.\n\nThe [validator] is a required argument used to specify which validator client, from\nall supported by Sedge (lighthouse, lodestar, prysm or teku), is used to exporting\nthe Slashing Protection data. This is necessary because each client has its own way\nto achieve the exportation.\n\nUsage:\n  sedge slashing-export [flags] [validator]\n\nExamples:\n\nsedge slashing-export --out slashing-data.json prysm\nsedge slashing-export --out slashing-data.json --stop-validator lodestar\nsedge slashing-export --out slashing-data.json --start-validator lighthouse\n\nFlags:\n      --container-tag string   Container tag to use. If defined, sedge will add to each container and the network, a suffix with the tag. e.g. sedge-validator-client -> sedge-validator-client-<tag>.\n  -h, --help                   help for slashing-export\n  -n, --network string         network (default "mainnet")\n  -o, --out string             path to write slashing protection data (default "[GENERATION_PATH]/slashing_protection.json")\n  -p, --path string            path to the generation directory (default "/path/to/sedge-data")\n      --start-validator        starts the validator client after export, regardless of the state the validator was in before\n      --stop-validator         stops the validator client after export, regardless of the state the validator was in before\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n'})}),"\n",(0,i.jsx)(t.h2,{id:"execution-example",children:"Execution Example"}),"\n",(0,i.jsx)(t.p,{children:"This is an example of exporting slashing protection data from a setup using sepolia network and lighthouse as validator client that is already stopped at the moment of the export."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"$ sedge slashing-export lighthouse -n sepolia --out slashing-protection.json\n2023-01-06 15:47:56 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:47:57 -- [INFO] You are running the latest version of sedge. Version:  v1.9.1\n2023-01-06 15:47:57 -- [INFO] Exporting slashing data from client lighthouse\n# highlight-next-line\n2023-01-06 15:47:57 -- [INFO] The slashing protection container is starting...\n# highlight-next-line\n2023-01-06 15:47:57 -- [INFO] The slashing container ends successfully.\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Notice in this case the validator client remains stopped because it has been stopped since before the export. If necessary the validator client could be started after the export using the ",(0,i.jsx)(t.code,{children:"--start-validator"})," flag, for example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"$ sedge slashing-export lighthouse -n sepolia --out slashing-protection.json --start-validator\n2023-01-06 15:51:11 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:51:11 -- [INFO] You are running the latest version of sedge. Version:  v1.9.1\n2023-01-06 15:51:11 -- [INFO] Exporting slashing data from client lighthouse\n2023-01-06 15:51:11 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:51:12 -- [INFO] The slashing container ends successfully.\n# highlight-next-line\n2023-01-06 15:51:12 -- [INFO] The validator container is being restarted...\n# highlight-next-line\n2023-01-06 15:51:12 -- [INFO] Validator started.\n"})}),"\n",(0,i.jsx)(t.p,{children:"Another case may be exporting the slashing data protection when the validator is currently running, for example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"$ sedge slashing-export lighthouse -n sepolia --out slashing-protection.json\n2023-01-06 15:51:46 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:51:46 -- [INFO] You are running the latest version of sedge. Version:  v1.9.1\n# highlight-next-line\n2023-01-06 15:51:46 -- [INFO] Stopping validator client\n# highlight-next-line\n2023-01-06 15:51:46 -- [INFO] stopping service: validator-client, currently on running status\n# highlight-next-line\n2023-01-06 15:51:47 -- [INFO] Validator client stopped.\n2023-01-06 15:51:47 -- [INFO] Exporting slashing data from client lighthouse\n2023-01-06 15:51:47 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:51:47 -- [INFO] The slashing container ends successfully.\n# highlight-next-line\n2023-01-06 15:51:47 -- [INFO] The validator container is being restarted...\n# highlight-next-line\n2023-01-06 15:51:47 -- [INFO] Validator started.\n"})}),"\n",(0,i.jsxs)(t.p,{children:["In this case, the validator client is stopped before the export and started again afterward. If necessary validator could be stopped after the export using the ",(0,i.jsx)(t.code,{children:"--stop-validator"})," flag. for example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"$ sedge slashing-export lighthouse -n sepolia --out slashing-protection.json --stop-validator\n2023-01-06 15:52:07 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:52:07 -- [INFO] You are running the latest version of sedge. Version:  v1.9.1\n# highlight-next-line\n2023-01-06 15:52:07 -- [INFO] Stopping validator client\n# highlight-next-line\n2023-01-06 15:52:07 -- [INFO] stopping service: validator-client, currently on running status\n# highlight-next-line\n2023-01-06 15:52:07 -- [INFO] Validator client stopped.\n2023-01-06 15:52:07 -- [INFO] Exporting slashing data from client lighthouse\n2023-01-06 15:52:08 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:52:08 -- [INFO] The slashing container ends successfully.\n"})}),"\n",(0,i.jsx)(t.p,{children:"In this case, the validator client is stopped before the export but is not started again afterward."})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);