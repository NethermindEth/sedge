"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Quickstart","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dependencies","href":"/docs/quickstart/dependencies","docId":"quickstart/dependencies","unlisted":false},{"type":"link","label":"Installation guide","href":"/docs/quickstart/install-guide","docId":"quickstart/install-guide","unlisted":false},{"type":"link","label":"Complete quickstart guide","href":"/docs/quickstart/complete-guide","docId":"quickstart/complete-guide","unlisted":false},{"type":"link","label":"Control Your Setup Stack","href":"/docs/quickstart/by-yourself","docId":"quickstart/by-yourself","unlisted":false},{"type":"link","label":"Restarting the Validator","href":"/docs/quickstart/setup-validator","docId":"quickstart/setup-validator","unlisted":false},{"type":"link","label":"Key Management","href":"/docs/quickstart/keys-management","docId":"quickstart/keys-management","unlisted":false},{"type":"category","label":"Useful Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Run a validator on Mainnet","href":"/docs/quickstart/samples/run-validator","docId":"quickstart/samples/run-validator","unlisted":false},{"type":"link","label":"Run a validator with mev-boost on Sepolia","href":"/docs/quickstart/samples/run-mev-boost-sepolia","docId":"quickstart/samples/run-mev-boost-sepolia","unlisted":false},{"type":"link","label":"Using custom Bootnodes","href":"/docs/quickstart/samples/custom-bootnodes","docId":"quickstart/samples/custom-bootnodes","unlisted":false},{"type":"link","label":"Using custom MEV Relays","href":"/docs/quickstart/samples/using-relays","docId":"quickstart/samples/using-relays","unlisted":false},{"type":"link","label":"Setting Checkpoint Sync","href":"/docs/quickstart/samples/setting-checkpoint-sync","docId":"quickstart/samples/setting-checkpoint-sync","unlisted":false},{"type":"link","label":"Exposing APIs","href":"/docs/quickstart/samples/exposing-apis","docId":"quickstart/samples/exposing-apis","unlisted":false},{"type":"link","label":"Running a MEV-boost node","href":"/docs/quickstart/samples/running-mev-boost-node","docId":"quickstart/samples/running-mev-boost-node","unlisted":false},{"type":"link","label":"Migrate from another setup","href":"/docs/quickstart/samples/migrate-setup","docId":"quickstart/samples/migrate-setup","unlisted":false}]},{"type":"link","label":"Staking with Lido using Sedge","href":"/docs/quickstart/staking-with-lido","docId":"quickstart/staking-with-lido","unlisted":false},{"type":"link","label":"Set up an Obol DV Node with Sedge","href":"/docs/quickstart/staking-with-obol-DV","docId":"quickstart/staking-with-obol-DV","unlisted":false},{"type":"link","label":"Lido Exporter","href":"/docs/quickstart/lido-exporter","docId":"quickstart/lido-exporter","unlisted":false},{"type":"link","label":"Running an Optimism Node with Sedge","href":"/docs/quickstart/running-optimism-node","docId":"quickstart/running-optimism-node","unlisted":false}],"href":"/docs/quickstart/"},{"type":"category","label":"Commands","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cli","href":"/docs/commands/cli","docId":"commands/cli","unlisted":false},{"type":"link","label":"Clients","href":"/docs/commands/clients","docId":"commands/clients","unlisted":false},{"type":"link","label":"Deps","href":"/docs/commands/deps","docId":"commands/deps","unlisted":false},{"type":"link","label":"Down","href":"/docs/commands/down","docId":"commands/down","unlisted":false},{"type":"link","label":"Generate","href":"/docs/commands/generate","docId":"commands/generate","unlisted":false},{"type":"link","label":"Import key","href":"/docs/commands/import-key","docId":"commands/import-key","unlisted":false},{"type":"link","label":"Keys","href":"/docs/commands/keys","docId":"commands/keys","unlisted":false},{"type":"link","label":"Logs","href":"/docs/commands/logs","docId":"commands/logs","unlisted":false},{"type":"link","label":"Networks","href":"/docs/commands/networks","docId":"commands/networks","unlisted":false},{"type":"link","label":"Run","href":"/docs/commands/run","docId":"commands/run","unlisted":false},{"type":"link","label":"Slashing Export","href":"/docs/commands/slashing-export","docId":"commands/slashing-export","unlisted":false},{"type":"link","label":"Slashing Import","href":"/docs/commands/slashing-import","docId":"commands/slashing-import","unlisted":false},{"type":"link","label":"Version","href":"/docs/commands/version","docId":"commands/version","unlisted":false},{"type":"link","label":"Show","href":"/docs/commands/show","docId":"commands/show","unlisted":false},{"type":"link","label":"Lido Status","href":"/docs/commands/lido-status","docId":"commands/lido-status","unlisted":false},{"type":"link","label":"Monitoring","href":"/docs/commands/monitoring","docId":"commands/monitoring","unlisted":false}],"href":"/docs/commands"},{"type":"category","label":"Hardware Requirements","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Mainnet","href":"/docs/hardware-requirements/mainnet-requirements","docId":"hardware-requirements/mainnet-requirements","unlisted":false},{"type":"link","label":"Testnets","href":"/docs/hardware-requirements/testnet-requirements","docId":"hardware-requirements/testnet-requirements","unlisted":false}],"href":"/docs/hardware-requirements/"},{"type":"category","label":"Networks and Clients","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Mainnet","href":"/docs/networks/mainnet","docId":"networks/mainnet","unlisted":false},{"type":"link","label":"Hoodi","href":"/docs/networks/hoodi","docId":"networks/hoodi","unlisted":false},{"type":"link","label":"Sepolia","href":"/docs/networks/sepolia","docId":"networks/sepolia","unlisted":false},{"type":"link","label":"Holesky","href":"/docs/networks/holesky","docId":"networks/holesky","unlisted":false},{"type":"link","label":"Gnosis","href":"/docs/networks/gnosis","docId":"networks/gnosis","unlisted":false},{"type":"link","label":"Chiado","href":"/docs/networks/chiado","docId":"networks/chiado","unlisted":false}],"href":"/docs/networks"},{"type":"category","label":"Contribution Guidelines","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Contributing","href":"/docs/guidelines/contributing","docId":"guidelines/contribution-guidelines","unlisted":false},{"type":"link","label":"Adding new Networks","href":"/docs/guidelines/new-networks","docId":"guidelines/new-network","unlisted":false},{"type":"link","label":"Adding new Clients","href":"/docs/guidelines/new-clients","docId":"guidelines/new-clients","unlisted":false}],"href":"/docs/guidelines"},{"type":"link","label":"Troubleshooting","href":"/docs/troubleshooting","docId":"troubleshoot","unlisted":false}]},"docs":{"commands/cli":{"id":"commands/cli","title":"Cli","description":"sedge cli run the setup tool on an interactive mode.","sidebar":"tutorialSidebar"},"commands/clients":{"id":"commands/clients","title":"Clients","description":"Running sedge clients will give you a list of supported clients for consensus, execution and validators.","sidebar":"tutorialSidebar"},"commands/deps":{"id":"commands/deps","title":"Deps","description":"Running sedge deps will allow you to check and install dependencies for needed to run Sedge.","sidebar":"tutorialSidebar"},"commands/down":{"id":"commands/down","title":"Down","description":"Running sedge down will stop and remove containers using the docker compose CLI.","sidebar":"tutorialSidebar"},"commands/generate":{"id":"commands/generate","title":"Generate","description":"Running sedge generate with the different sub commands will generate the docker-compose file that will be used to run the nodes.","sidebar":"tutorialSidebar"},"commands/import-key":{"id":"commands/import-key","title":"Import key","description":"Running sedge import-key will import validator keys from a directory following","sidebar":"tutorialSidebar"},"commands/keys":{"id":"commands/keys","title":"Keys","description":"Running sedge keys will generate the keystore folder.","sidebar":"tutorialSidebar"},"commands/lido-status":{"id":"commands/lido-status","title":"Lido Status","description":"Running sedge lido-status will display detailed data for a single Lido Node Operator based on the provided rewards address.","sidebar":"tutorialSidebar"},"commands/logs":{"id":"commands/logs","title":"Logs","description":"Running sedge logs will get running container logs using docker compose CLI.","sidebar":"tutorialSidebar"},"commands/monitoring":{"id":"commands/monitoring","title":"Monitoring","description":"Running sedge monitoring will allow you to manage the monitoring stack used for tracking the performance and health of node operations.","sidebar":"tutorialSidebar"},"commands/networks":{"id":"commands/networks","title":"Networks","description":"Running sedge networks will give you a list of supported networks","sidebar":"tutorialSidebar"},"commands/run":{"id":"commands/run","title":"Run","description":"Running sedge run will run all the services in the docker-compose.yml file under","sidebar":"tutorialSidebar"},"commands/show":{"id":"commands/show","title":"Show","description":"Running sedge show will give you some information about the containers created by Sedge for a specific sedge-data directory.","sidebar":"tutorialSidebar"},"commands/slashing-export":{"id":"commands/slashing-export","title":"Slashing Export","description":"Running sedge slashing-export will export slashing protection data from the current validator client. The slashing protection data is a JSON file that meets with the EIP-3076 specification.","sidebar":"tutorialSidebar"},"commands/slashing-import":{"id":"commands/slashing-import","title":"Slashing Import","description":"Running sedge slashing-import will import slashing protection data to the current validator client. The slashing protection data is a JSON file that meets with the EIP-3076 specification.","sidebar":"tutorialSidebar"},"commands/version":{"id":"commands/version","title":"Version","description":"Running sedge version will give you the version you are running while using sedge.","sidebar":"tutorialSidebar"},"guidelines/contribution-guidelines":{"id":"guidelines/contribution-guidelines","title":"Contributing","description":"Thank you for considering making contributions to Sedge and Nethermind related repositories!","sidebar":"tutorialSidebar"},"guidelines/new-clients":{"id":"guidelines/new-clients","title":"Adding new Clients","description":"We can add new Consensus, Execution or Validator clients to Sedge, you will mostly only need to add a few config files","sidebar":"tutorialSidebar"},"guidelines/new-network":{"id":"guidelines/new-network","title":"Adding new Networks","description":"We support Ethereum Mainnet and Gnosis Chain, and over time we will update the different testnets on those networks.","sidebar":"tutorialSidebar"},"hardware-requirements/index":{"id":"hardware-requirements/index","title":"Hardware requirements","description":"Hardware requirements for Ethereum validators","sidebar":"tutorialSidebar"},"hardware-requirements/mainnet-requirements":{"id":"hardware-requirements/mainnet-requirements","title":"Mainnet","description":"Some of the most essential requirements for Mainnet can be found in the Ethereum Launchpad Checklist:","sidebar":"tutorialSidebar"},"hardware-requirements/testnet-requirements":{"id":"hardware-requirements/testnet-requirements","title":"Testnets","description":"The Testnets (Sepolia) are lighter than Mainnet and hence the requirements are lower. The requirements depend heavily from the particular set of clients involved in the setup, but from our experience we can identify general requirements:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Sedge is a one-click setup tool for PoS network/chain validators and nodes written entirely in the Go programming language. Sedge takes care of the entire on-premise full node setup based on the chosen client, using generated docker-compose scripts based on the desired configuration. The following list shows some of the use cases for Sedge:","sidebar":"tutorialSidebar"},"networks/chiado":{"id":"networks/chiado","title":"Chiado","description":"Chiado is a Gnosis Chain testnet. Gnosis Chain is an EVM based Ethereum sidechain that is designed to be a platform for","sidebar":"tutorialSidebar"},"networks/gnosis":{"id":"networks/gnosis","title":"Gnosis","description":"Gnosis Chain is an EVM based Ethereum sidechain designed to be a platform for decentralized prediction markets.","sidebar":"tutorialSidebar"},"networks/holesky":{"id":"networks/holesky","title":"Holesky","description":"Holesky is Ethereum\'s public testnet that serves as a technical experimentation platform for Ethereum\'s infrastructure, staking designs, and protocol-level developments. This testing environment brings its own set of validators, a dedicated block explorer, and an ecosystem of faucets.","sidebar":"tutorialSidebar"},"networks/hoodi":{"id":"networks/hoodi","title":"Hoodi","description":"Hoodi is Ethereum\'s public testnet that serves as a technical experimentation platform for Ethereum\'s infrastructure, staking designs, and protocol-level developments. This testing environment brings its own set of validators, a dedicated block explorer, and an ecosystem of faucets.","sidebar":"tutorialSidebar"},"networks/mainnet":{"id":"networks/mainnet","title":"Mainnet","description":"Mainnet is the public and decentralized network of Ethereum. It is the network that all validators participate in to","sidebar":"tutorialSidebar"},"networks/sepolia":{"id":"networks/sepolia","title":"Sepolia","description":"Sepolia is a permissioned Ethereum test network. It is one of the testnets that is maintained after The Merge. The initial version of Sepolia used a proof-of-work (PoW) consensus mechanism. However, in the light of The Merge, Sepolia followed the mainnet\u2019s example and merged with the proof-of-stake (PoS) Sepolia Beacon Chain. So, Sepolia is now, just like Ethereum, a PoS chain. Furthermore, Sepolia is almost an identical copy of Ethereum, so it accurately mimics the mainnet and supports accurate testing. This enables developers to design, create, test, and track their project\u2019s public performance before going live.","sidebar":"tutorialSidebar"},"quickstart/by-yourself":{"id":"quickstart/by-yourself","title":"Control Your Setup Stack","description":"Once you use sedge cli or sedge generate to generate the docker-compose.yml file, you can handle it by yourself. This guide will show you how.","sidebar":"tutorialSidebar"},"quickstart/complete-guide":{"id":"quickstart/complete-guide","title":"Complete quickstart guide","description":"Sedge is a one-click setup tool that you can use to set up and run a validator on Ethereum easily and without any prior knowledge. In this guide, you will go through every step in the validator setup using Sedge, along with detailed explanations for beginners.","sidebar":"tutorialSidebar"},"quickstart/dependencies":{"id":"quickstart/dependencies","title":"Dependencies","description":"Sedge requires only Docker with the Docker Compose plugin to work.","sidebar":"tutorialSidebar"},"quickstart/index":{"id":"quickstart/index","title":"Quickstart","description":"Sedge\'s Quickstart","sidebar":"tutorialSidebar"},"quickstart/install-guide":{"id":"quickstart/install-guide","title":"Installation guide","description":"Sedge is currently available only for Linux, macOS, and Windows, for amd64 and arm64 architectures. You can use any of the following methods to install Sedge::","sidebar":"tutorialSidebar"},"quickstart/keys-management":{"id":"quickstart/keys-management","title":"Key Management","description":"To become a validator on Ethereum PoS, an individual or entity needs to meet certain requirements, such as:","sidebar":"tutorialSidebar"},"quickstart/lido-exporter":{"id":"quickstart/lido-exporter","title":"Lido Exporter","description":"The Lido Exporter is an independent utility container designed to export metrics from Lido\'s Community Staking Module (CSM) smart contracts to Prometheus. It is included in Sedge\u2019s Docker Compose stack but can be used in any other stack related to Lido nodes. The exporter is highly flexible and can integrate with external monitoring setups, making it ideal for DevOps pipelines that require insight into Lido\u2019s validator and node operator performance.","sidebar":"tutorialSidebar"},"quickstart/running-optimism-node":{"id":"quickstart/running-optimism-node","title":"Running an Optimism Node with Sedge","description":"What is Optimism?","sidebar":"tutorialSidebar"},"quickstart/samples/custom-bootnodes":{"id":"quickstart/samples/custom-bootnodes","title":"Using custom Bootnodes","description":"What are Bootnodes?","sidebar":"tutorialSidebar"},"quickstart/samples/exposing-apis":{"id":"quickstart/samples/exposing-apis","title":"Exposing APIs","description":"Ethereum APIs","sidebar":"tutorialSidebar"},"quickstart/samples/migrate-setup":{"id":"quickstart/samples/migrate-setup","title":"Migrate from another setup","description":"If you already have a setup running and want to migrate it to a new server, change the client you are using, or upgrade","sidebar":"tutorialSidebar"},"quickstart/samples/run-mev-boost-sepolia":{"id":"quickstart/samples/run-mev-boost-sepolia","title":"Run a validator with mev-boost on Sepolia","description":"This guide shows you how to setup and run a validator using Teku as consensus layer, with a random execution client, and mev-boost.","sidebar":"tutorialSidebar"},"quickstart/samples/run-validator":{"id":"quickstart/samples/run-validator","title":"Run a validator on Mainnet","description":"This guide shows you how to setup and run a validator on Mainnet using random execution, consensus, and validator clients.","sidebar":"tutorialSidebar"},"quickstart/samples/running-mev-boost-node":{"id":"quickstart/samples/running-mev-boost-node","title":"Running a MEV-boost node","description":"What is a MEV-boost node","sidebar":"tutorialSidebar"},"quickstart/samples/setting-checkpoint-sync":{"id":"quickstart/samples/setting-checkpoint-sync","title":"Setting Checkpoint Sync","description":"Overview","sidebar":"tutorialSidebar"},"quickstart/samples/using-relays":{"id":"quickstart/samples/using-relays","title":"Using custom MEV Relays","description":"What is a MEV Relay?","sidebar":"tutorialSidebar"},"quickstart/setup-validator":{"id":"quickstart/setup-validator","title":"Restarting the Validator","description":"By default, when you set up a full node, the Validator container will wait for the following conditions to be met:","sidebar":"tutorialSidebar"},"quickstart/staking-with-lido":{"id":"quickstart/staking-with-lido","title":"Staking with Lido using Sedge","description":"What is the Lido Community Staking Module (CSM)?","sidebar":"tutorialSidebar"},"quickstart/staking-with-obol-DV":{"id":"quickstart/staking-with-obol-DV","title":"Set up an Obol DV Node with Sedge","description":"What are Distributed Validators?","sidebar":"tutorialSidebar"},"troubleshoot":{"id":"troubleshoot","title":"Troubleshooting","description":"Docker Compose not found after Sedge installs it","sidebar":"tutorialSidebar"}}}}')}}]);